package entrega1;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.Socket;

public class TelaPrincipal extends JFrame {
    private ClienteLogin clienteLogin;
    private Socket socket;
    private String token;
    

    public TelaPrincipal(Socket socket, String token, ClienteLogin clienteLogin) {
        this.socket = socket;
        this.clienteLogin = clienteLogin;
        this.token = token;

        setTitle("Tela Principal");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(400, 300);

        JPanel panel = new JPanel(new FlowLayout());

        JButton cadastrarUsuarioButton = new JButton("Cadastrar Usuário");
        cadastrarUsuarioButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                abrirCadastroUsuario();
            }
        });
        panel.add(cadastrarUsuarioButton);

        JButton listarUsuariosButton = new JButton("Listar Usuários");
        listarUsuariosButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                listarUsuarios();
            }
        });
        panel.add(listarUsuariosButton);

        JButton editarUsuarioButton = new JButton("Editar Usuário");
        editarUsuarioButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                abrirEditarUsuario();
            }
        });
        panel.add(editarUsuarioButton);

        JButton excluirUsuarioButton = new JButton("Excluir Usuário");
        excluirUsuarioButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                excluirUsuario();
            }
        });
        panel.add(excluirUsuarioButton);

        JButton logoutButton = new JButton("Logout");    
        logoutButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
            	JOptionPane.showMessageDialog(null, "Logout realizado com sucesso.");
                voltarTelaLogin();
            }
        });
        panel.add(logoutButton);

        add(panel);
        setLocationRelativeTo(null);
    }
    
    public void atualizarSocket(Socket novoSocket) {
        this.socket = novoSocket;
    }
     

    private void abrirCadastroUsuario() {
        CadastroUsuario cadastroUsuario = new CadastroUsuario(socket, this);
        cadastroUsuario.setVisible(true);
        this.dispose();
    }

    private void listarUsuarios() {
    	ListarUsuarios listarUsuarios = new ListarUsuarios(socket, this);
    	listarUsuarios.setVisible(true);
        //JOptionPane.showMessageDialog(this, "Operação de Listar Usuários");
        // Lógica para a operação de listar usuários
    }

    private void abrirEditarUsuario() {
        EditarUsuario editarUsuario = new EditarUsuario(socket, this);
        editarUsuario.setVisible(true);
    }

    private void excluirUsuario() {
        JOptionPane.showMessageDialog(this, "Operação de Excluir Usuário");
        // Lógica para a operação de excluir usuário
    }

    private void voltarTelaLogin() {
    	try {
            if (socket != null && !socket.isClosed()) {
                socket.close();
            }
        } catch (IOException ex) {
            ex.printStackTrace();
        }

        clienteLogin.setVisible(true);
        dispose(); 
    }
}
